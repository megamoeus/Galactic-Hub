-- Galactic Obfuscation
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v64=v2(v0(v30,16));if v19 then local v76=0;local v77;while true do if (v76==0) then v77=v5(v64,v19);v19=nil;v76=1;end if (v76==1) then return v77;end end else return v64;end end end);v17=1;end if (v17==6) then v28=nil;function v28()local v38=305 -(184 + 121);local v39;local v40;local v41;local v42;local v43;local v44;local v45;while true do if (v38==2) then local v73=0;while true do if (v73~=(1 + 0)) then else v38=3;break;end if (v73==(0 + 0)) then local v96=434 -(46 + 388);while true do if (v96==0) then v43=nil;v44=nil;v96=1;end if (v96==(4 -3)) then v73=1 + 0;break;end end end end end if ((6 -3)==v38) then v45=nil;while true do local v78=0 -0;local v79;local v80;while true do if (v78==0) then v79=0 -0;v80=nil;v78=1 + 0;end if (v78==(1545 -(314 + 1230))) then while true do if ((1541 -(101 + 1440))~=v79) then else v80=0;while true do if (v80==(0 -0)) then if (v39==(2 -1)) then local v100=0 -0;local v101;while true do if (v100~=(1774 -(1745 + 29))) then else v101=0 -0;while true do if (v101==(326 -(257 + 68))) then v45={};v39=3 -1;break;end if (v101~=0) then else local v199=0;while true do if (v199==(360 -(187 + 173))) then v43={v40,v41,nil,v42};v44=v23();v199=1;end if (v199==1) then v101=1;break;end end end end break;end end end if (v39==2) then local v102=0 + 0;local v103;local v104;while true do if (v102==1) then while true do if (v103~=0) then else v104=0;while true do if (v104==(1205 -(216 + 988))) then for v220=2 -1,v23() do local v221=0 + 0;local v222;local v223;local v224;while true do if (v221~=(0 + 0)) then else v222=0;v223=nil;v221=1195 -(161 + 1033);end if (v221==1) then v224=nil;while true do if (v222==(0 -0)) then v223=0 + 0;v224=nil;v222=1486 -(1045 + 440);end if (v222~=(2 -1)) then else while true do if (v223==(0 + 0)) then v224=v21();if (v20(v224,1072 -(547 + 524),1 + 0)==(1595 -(1462 + 133))) then local v293=304 -(99 + 205);local v294;local v295;local v296;local v297;while true do if ((3 -1)~=v293) then else while true do if (v294==(1176 -(988 + 187))) then local v303=0;while true do if (v303==(0 -0)) then v297={v22(),v22(),nil,nil};if (v295==(0 + 0)) then local v313=0;local v314;while true do if ((0 + 0)~=v313) then else v314=1865 -(63 + 1802);while true do if (0~=v314) then else v297[3 + 0]=v22();v297[1 + 3]=v22();break;end end break;end end elseif (v295==1) then v297[3]=v23();elseif (v295==2) then v297[1 + 2]=v23() -(2^(9 + 7));elseif (v295==3) then local v319=0 -0;local v320;local v321;while true do if ((499 -(412 + 87))~=v319) then else v320=0 + 0;v321=nil;v319=1;end if (1~=v319) then else while true do if (v320==0) then v321=142 -(79 + 63);while true do if (v321==(0 -0)) then v297[3]=v23() -((1 + 1)^(196 -(74 + 106)));v297[1284 -(246 + 1034)]=v22();break;end end break;end end break;end end end v303=1;end if (v303==(670 -(315 + 354))) then v294=2 + 0;break;end end end if (v294==3) then if (v20(v296,1855 -(612 + 1240),3)==(3 -2)) then v297[1452 -(1041 + 407)]=v45[v297[4]];end v40[v220]=v297;break;end if (2==v294) then if (v20(v296,1 + 0,1)==(1 + 0)) then v297[2]=v45[v297[1 + 1]];end if (v20(v296,6 -4,1 + 1)~=1) then else v297[2 + 1]=v45[v297[3]];end v294=378 -(36 + 339);end if (v294==(1630 -(411 + 1219))) then local v305=0;while true do if (v305==1) then v294=3 -2;break;end if (v305==0) then v295=v20(v224,2 + 0,3);v296=v20(v224,1535 -(984 + 547),6);v305=1 + 0;end end end end break;end if (v293==0) then v294=0 + 0;v295=nil;v293=3 -2;end if (v293==1) then local v301=0 + 0;while true do if (v301==0) then v296=nil;v297=nil;v301=1 + 0;end if (v301==(1 -0)) then v293=2;break;end end end end end break;end end break;end end break;end end end v39=1090 -(909 + 178);break;end if (v104==(1299 -(635 + 664))) then local v208=0 -0;local v209;while true do if (v208~=(0 -0)) then else v209=0 -0;while true do if (v209~=(2 -1)) then else v104=1;break;end if (v209~=0) then else local v264=1891 -(1779 + 112);while true do if (v264~=(0 + 0)) then else for v277=1 + 0,v44 do local v278=0;local v279;local v280;while true do if (v278~=1) then else if (v279==(1 + 0)) then v280=v21()~=(0 -0);elseif (v279==(112 -(48 + 62))) then v280=v24();elseif (v279~=(3 + 0)) then else v280=v25();end v45[v277]=v280;break;end if ((219 -(81 + 138))~=v278) then else local v299=0;local v300;while true do if (v299~=(0 + 0)) then else v300=1372 -(567 + 805);while true do if ((0 + 0)==v300) then local v306=0 + 0;while true do if (v306==(0 + 0)) then v279=v21();v280=nil;v306=360 -(176 + 183);end if (v306==1) then v300=1 + 0;break;end end end if (1~=v300) then else v278=1;break;end end break;end end end end end v43[9 -6]=v21();v264=1;end if (v264==1) then v209=1;break;end end end end break;end end end end break;end end break;end if (0==v102) then v103=0;v104=nil;v102=1;end end end v80=1 -0;end if (v80~=(1 + 0)) then else if (3==v39) then local v105=0;local v106;while true do if (v105==(1888 -(1715 + 173))) then v106=0;while true do local v168=667 -(493 + 174);while true do if ((549 -(121 + 428))~=v168) then else if (v106~=1) then else return v43;end if (v106==(0 + 0)) then local v210=0;local v211;while true do if (v210==(0 + 0)) then v211=0;while true do if (v211==(0 -0)) then local v265=0;while true do if (0==v265) then for v281=1,v23() do v41[v281-1]=v28();end for v283=1,v23() do v42[v283]=v23();end v265=4 -3;end if ((69 -(62 + 6))==v265) then v211=1;break;end end end if (v211~=1) then else v106=1 + 0;break;end end break;end end end break;end end end break;end end end if (v39~=(0 + 0)) then else local v107=0 + 0;local v108;while true do if (v107==0) then v108=0 -0;while true do if (v108==(1 + 0)) then v42={};v39=1;break;end if (v108==0) then local v200=0;while true do if (0==v200) then v40={};v41={};v200=1;end if (1==v200) then v108=1 + 0;break;end end end end break;end end end break;end end break;end end break;end end end break;end if (v38==(0 + 0)) then local v74=0 -0;while true do if (v74==1) then v38=391 -(243 + 147);break;end if (v74~=(0 + 0)) then else v39=11 -(8 + 3);v40=nil;v74=1 -0;end end end if (v38==1) then local v75=0 + 0;while true do if (v75~=(1 -0)) then else v38=2;break;end if (v75==(0 -0)) then v41=nil;v42=nil;v75=1;end end end end end v29=nil;v17=7;end if (v17==7) then function v29(v31,v32,v33)local v46=v31[1];local v47=v31[2];local v48=v31[3];return function(...)local v65=1;local v66= -1;local v67={...};local v68=v11("#",...) -1;local function v69()local v81=v46;local v82=Const;local v83=v47;local v84=v48;local v85=v27;local v86={};local v87={};local v88={};for v94=0 + 0,v68 do if ((v94>=v84) or ((12261 -8321)==4607)) then v86[v94-v84]=v67[v94 + (1 -0)];else v88[v94]=v67[v94 + (1065 -((867 -509) + 706))];end end local v89=(v68-v84) + (1546 -(613 + 932));local v90;local v91;while true do local v95=0 -(0 -0);while true do if ((v95==(0 -0)) or ((16428 -11981)<=(5290 -3478))) then local v99=1480 -((174 -51) + 1357);while true do if ((v99==(0 -0)) or ((1150 -754)==(12440 -8016))) then v90=v81[v65];v91=v90[1];v99=1 + (1890 -(664 + 1226));end if ((v99==1) or ((8769 -4730)<3337)) then v95=2 -(122 -(84 + 37));break;end end end if (((4272 -2197)==(9045 -6970)) and ((1 + 0)==v95)) then if ((v91<=(58 -40)) or ((3015 -(417 + 219))>3737)) then if (((4027 -(261 + 254))<(19389 -14679)) and (v91<=(469 -(75 + 386)))) then if ((3071>(2947 -(316 + 382))) and (v91<=(3 -(0 + 0)))) then if ((((11947 -3870) -5688)<=(9663 -6821)) and (v91<=(1 -0))) then if ((1016<(1330 + 1886)) and (v91>(0 + 0))) then local v109=0;local v110;local v111;local v112;local v113;local v114;local v115;while true do if ((2675<=(5588 -(276 + 526))) and (v109==(834 -(193 + 640)))) then v112=nil;v113=nil;v109=3 -1;end if ((v109==((1477 -(569 + 165)) -(727 + 13))) or ((561 + 2747)<(2505 + 790))) then while true do if (((692 + 3718)>(3693 -((464 -(11 + 18)) + 5))) and (v110==(1054 -(771 + 280)))) then if ((1058<(4243 -((1588 -758) + 392))) and v115) then local v231=0 + (0 -0);local v232;local v233;while true do if (((4547 -(132 + 797))<=4366) and (v231==(0 + 0))) then v232=0 -0;v233=nil;v231=1 -(0 -0);end if (((2 -1)==v231) or (1544>((5001 -(306 + 261)) -(130 + (203 -105))))) then while true do if ((v232==(1872 -(1059 + (1740 -(752 + 175))))) or ((971 + 2241)>=(5026 -(242 + 929)))) then v233=0 -0;while true do if ((v233==(0 -0)) or ((3986 -2490)>=(4547 -1189))) then v88[v113]=v115;v65=v90[3];break;end end break;end end break;end end else v65=v65 + (1 -0);end break;end if ((v110==0) or ((1097 -(70 + 394))>4582)) then local v212=510 -(314 + 196);while true do if ((v212==1) or ((1932 + 1576)>((6076 -(565 + 715)) -(751 + 500)))) then v110=1;break;end if (((6834 -(521 + 4588))<(1702 + 479)) and (0==v212)) then v111=v90[1 + 1];v112=v90[1235 -(140 + 1091)];v212=4 -3;end end end if ((v110==(3 -2)) or ((6077 -(93 + 1595))<=(5354 -3975))) then v113=v111 + 2;v114={v88[v111](v88[v111 + 1],v88[v113])};v110=1 + 1;end if ((v110==((3010 -(190 + 875)) -(1918 + 25))) or (((672 -(88 + 86)) + 2282)>(5408 -2590))) then local v213=1279 -(901 + 378);while true do if ((v213==((1830 -(281 + 1549)) -0)) or (2261>(7909 -4162))) then for v248=1,v112 do v88[v113 + v248]=v114[v248];end v115=v114[1 + (0 -0)];v213=1 + 0;end if ((v213==1) or ((6275 -1729)<392)) then v110=1 + 2;break;end end end end break;end if ((v109==(4 -2)) or ((630 + 1848)==(3496 -1830))) then v114=nil;v115=nil;v109=3;end if (((175 + 48)<=(4642 -(750 + 78))) and ((0 + 0)==v109)) then v110=0 -(0 -0);v111=nil;v109=2 -1;end end else v88[v90[7 -5]]=v90[701 -(4 + 327 + 367)];end elseif ((v91>(1 + 1)) or ((2684 + 1306)>4056)) then local v117=0;local v118;local v119;local v120;while true do if ((v117==1) or (643>3769)) then v120=nil;while true do if (((270 + 2320)>=(1406 -(77 + 847))) and ((474 -(64 + 103 + 307))==v118)) then local v214=1677 -(808 + 702 + 167);while true do if (((0 + 0)==v214) or ((2049 + 1541)==(1514 -(16 + 707)))) then v119=302 -(162 + 140);v120=nil;v214=(3 -2) -0;end if ((v214==(1 + 0)) or ((1904 + 7 + 6)>=((788 -398) + 3131))) then v118=1 + 0;break;end end end if ((v118==1) or (3520>(6225 -2125))) then while true do if (((5907 -1760)>=(1091 + 186)) and ((0 -0)==v119)) then v120=v90[2 + 0];do return v12(v88,v120,v66);end break;end end break;end end break;end if ((v117==(0 + 0)) or ((491 + 1563)>=(2782 -(338 + 239)))) then v118=1748 -(200 + 1548);v119=nil;v117=1 + 0;end end else local v121=0 + 0;local v122;while true do if (((5726 -(1066 + 930))>=(462 + 880)) and (v121==0)) then v122=v90[1604 -(266 + 1336)];v88[v122]=v88[v122](v12(v88,v122 + (4 -3),v90[2 + 1]));break;end end end elseif ((v91<=(1466 -(119 + 1342))) or ((3376 -(3220 -(251 + 439)))>=((11356 -7823) + 1382))) then if ((v91==4) or (1692<1414)) then local v123=0 + 0;local v124;local v125;while true do if (((2673 + 1012)<((7130 + 6547) -9491)) and ((2 -1)==v123)) then while true do if ((((7380 -(1390 + 362)) -(184 + 503))>=(5689 -(1778 + 220))) and (v124==0)) then v125=v90[2];v88[v125](v12(v88,v125 + (2 -1),v90[361 -(253 + 105)]));break;end end break;end if (((1401 + 2558)>(982 -((1265 -(751 + 328)) + 543))) and (0==v123)) then v124=0 -0;v125=nil;v123=1 + 0;end end elseif ((v88[v90[2]]==v90[1710 -(670 + 1036)]) or (((3037 -(808 + 596)) -(95 + 564))==4464)) then v65=v65 + 1 + 0;else v65=v90[1 + 2];end elseif ((v91<=(1282 -(853 + 423))) or ((2386 -(527 + (1611 -621)))>(2338 + 2407))) then v88[v90[864 -(357 + 505)]]=v88[v90[3]];elseif ((v91>((1973 -(536 + 1413)) -17)) or (2021<=(2636 -(969 + 304)))) then v88[v90[954 -(337 + 615)]]=v32[v90[6 -3]];else v88[v90[7 -5]]=v33[v90[3 + 0]];end elseif (((3722 -(31 + 592))==(12340 -9241)) and (v91<=(1 + 12))) then if ((3239>=820) and (v91<=(4 + 6))) then if ((v91>(9 + 0)) or ((1861 + 420)<1205)) then if ((3341>(649 + 210)) and (v88[v90[2 + 0]]==v88[v90[1184 -(599 + 250 + 331)]])) then v65=v65 + (2 -1);else v65=v90[3 + 0];end else do return v88[v90[2 -0]];end end elseif (((210 + 2006)>=(680 + 780)) and (v91<=(22 -11))) then v88[v90[(2126 -(324 + 437)) -(942 + 421)]][v90[5 -(2 + 0)]]=v90[2 + 2];elseif ((v91>(1290 -(1066 + (450 -238)))) or ((1183 -(15 + 52))>(2815 -((161 -99) + 240)))) then local v173=0;local v174;local v175;local v176;local v177;local v178;local v179;while true do if ((v173==(7 -5)) or ((4906 -2131)<=(5145 -(8808 -6034)))) then v178=nil;v179=nil;v173=1485 -(1276 + 206);end if ((v173==(8 -5)) or ((4076 -(57 + 1609))>=(5499 -(235 + 1109)))) then while true do if (((451 + 4086)>=((5783 -3903) -1231)) and (v174==1)) then v177=nil;v178=nil;v174=2 + 0;end if (((5 -3)==v174) or (1423>(718 + 4054))) then v179=nil;while true do if ((v175==2) or ((577 + 50 + 2344)>(3573 + 327))) then for v266=v176,v66 do local v267=(2181 -(694 + 137)) -(124 + 1226);local v268;local v269;while true do if ((v267==(1713 -(351 + (1489 -(76 + 51))))) or (177==(7317 -4800))) then v268=0 -0;v269=nil;v267=1 + 0 + 0;end if (((1 + 0)==v267) or ((2208 + 93)<(748 -(54 + 128)))) then while true do if ((v268==(0 -0)) or (140>(40 + 251))) then v269=0 + 0;while true do if (((677 + 295)==(319 + 653)) and (v269==(1013 -(186 + 827)))) then v179=v179 + 1 + 0 + 0 + 0;v88[v266]=v177[v179];break;end end break;end end break;end end end break;end if (((1702 -(250 + 548))<=4072) and (v175==(1507 -(65 + 1441)))) then local v261=0 + 0;local v262;while true do if ((3460>=(1538 -(517 + (321 -(42 + 7))))) and (v261==(0 + 0))) then v262=1370 -(800 + 570);while true do if ((v262==(4 -3)) or ((1453 + 853)>=(5923 -(411 + 1565)))) then v175=2 -0;break;end if ((0==v262) or ((4707 -(341 + 1433))<=(3361 -(391 + 206 + 34)))) then v66=(v178 + v176) -(1 -0);v179=0;v262=1 + 0;end end break;end end end if (((1525 -953)<=(3347 -1571)) and (v175==(0 + 0 + 0))) then local v263=0 -0;while true do if (((1123 + 2120)>=1585) and (v263==(0 + 0))) then v176=v90[2 + 0];v177,v178=v85(v88[v176](v88[v176 + 1]));v263=1137 -(222 + 914);end if ((v263==(1 + 0 + 0)) or ((5744 -(835 + 1010))<1868)) then v175=1 + 0;break;end end end end break;end if ((2826<3081) and (v174==(1350 -(216 + 1134)))) then v175=0;v176=nil;v174=761 -(166 + 594);end end break;end if (((8556 -6578)>=((3590 -(692 + 8)) -(450 + 571))) and (v173==(333 -(193 + 140)))) then v174=0 -0;v175=nil;v173=1711 -(802 + 908);end if ((v173==(4 -3)) or ((9112 -4415)==((5626 -3342) + 894))) then v176=nil;v177=nil;v173=1990 -(1791 + 197);end end else local v180=0;local v181;local v182;local v183;while true do if ((v180==(0 + 0)) or ((4215 -(543 + 1333))==(8561 -4104))) then local v205=0 -0;while true do if (((2358 + 2317)>=(1203 -((963 -(361 + 396)) + 221))) and (v205==(1 + 0))) then v180=2 -1;break;end if ((v205==(1931 -(1389 + 542))) or (1372==(592 + 7))) then v181=v90[3 -(1 -0)];v182=v88[v181];v205=(1 -0) -0;end end end if ((((5252 -1790) -1307)>=(1311 + (228 -78))) and (v180==(1 + 0))) then v183=v90[7 -4];for v215=1 + 0,v183 do v182[v215]=v88[v181 + v215];end break;end end end elseif ((v91<=(26 -11)) or ((420 + 281 + 1262)>=(17277 -13688))) then if ((v91>14) or ((11500 -7331)<=1898)) then if ( not v88[v90[5 -3]] or ((1703 + 1228)<(839 + 397))) then v65=v65 + (2 -1);else v65=v90[1 + 2];end else for v169=v90[869 -(56 + (2824 -2013))],v90[1381 -(828 + 550)] do v88[v169]=nil;end end elseif (((4553 -(399 + 761))>656) and (v91<=(10 + 6))) then if ((v90[2]==v88[v90[5 -1]]) or ((5233 -(7022 -3577))>=((8340 -(805 + 1130)) -(375 + 1271)))) then v65=v65 + (1918 -(201 + 1716));else v65=v90[3];end elseif ((v91==(39 -22)) or ((23085 -18269)<(631 + 3104))) then local v184=0 -0;local v185;local v186;local v187;local v188;while true do if (((3289 -(79 + 234 + 182))>=(3728 -(907 + 585))) and (v184==(1 + 0))) then v187=nil;v188=nil;v184=9 -7;end if ((v184==(0 -(1551 -(902 + 649)))) or (3983<=((1037 + 1427) -(16 + 22)))) then v185=0 + (0 -0);v186=nil;v184=1;end if ((((3115 -(365 + 113)) -(154 + 77))>=(1411 + 399)) and (v184==(1434 -(672 + 744 + 16)))) then while true do if ((v185==(347 -(293 + 52))) or ((4849 -((1531 -(1148 + 297)) + 332))<=(6087 -3514))) then for v237=1,v90[4] do local v238=0 + 0;local v239;while true do if (((2504 -1461)<=(2468 -1131)) and (v238==(0 -0))) then v65=v65 + 1 + 0;v239=v81[v65];v238=1766 -(1367 + (1230 -(114 + 718)));end if ((v238==(1 -0)) or ((2697 -1340)<(1261 -(56 + (1629 -666))))) then if (((3050 -(182 + 55))==(2291 + 522)) and (v239[1]==(4 + 2))) then v188[v237-(1 + 0)]={v88,v239[11 -8]};else v188[v237-1]={v32,v239[1724 -(1009 + 712)]};end v87[ #v87 + (1434 -(1403 + 30))]=v188;break;end end end v88[v90[452 -(127 + 323)]]=v29(v186,v187,v33);break;end if ((v185==(489 -(105 + 384))) or ((8562 -4441)<=(3717 -(283 + 657)))) then local v235=0;while true do if (((4105 -(991 + 280 + 60))>((1793 -(310 + 171)) -(15 + 941))) and (v235==0)) then v186=v83[v90[9 -6]];v187=nil;v235=1 + 0;end if ((v235==1) or ((5763 -(38 + (2920 -(690 + 725))))==(1538 -(1125 + 177)))) then v185=1 + 0;break;end end end if ((v185==((1 + 1) -1)) or ((3496 -(271 + 984))>(3871 -(567 + 381)))) then v188={};v187=v9({},{__index=function(v240,v241)local v250=0 -0;local v251;local v252;while true do if (((1488 -(57 + 309))<=3956) and (v250==(453 -(331 + 122)))) then v251=(1616 + 251) -(1470 + 397);v252=nil;v250=1;end if ((v250==((2 -1) -0)) or (2057<(1691 -(316 + 296)))) then while true do if ((3364<=(4032 + 31)) and ((0 + 0)==v251)) then v252=v188[v241];return v252[1 + 0][v252[7 -5]];end end break;end end end,__newindex=function(v242,v243,v244)local v253=0 -0;local v254;local v255;while true do if (((1 -(0 -0))==v253) or (3085<(344 + 1386))) then while true do if (((528 -366)==(461 -(209 + (1669 -(1041 + 538))))) and ((0 + 0)==v254)) then v255=v188[v243];v255[1 + 0][v255[1619 -(611 + 1006)]]=v244;break;end end break;end if ((1146==(890 + 256)) and (v253==(0 + 0))) then local v271=0 + 0;while true do if (((1265 -(88 + 555))<=1966) and (v271==(1 + 0))) then v253=1 -0;break;end if ((v271==0) or ((5568 -(620 + 93))<=(652 -499))) then v254=151 -(114 + 37);v255=nil;v271=1 -0;end end end end end});v185=2;end end break;end end else v88[v90[2 + 0]]=v88[v90[3]][v90[2 + 2]];end elseif ((v91<=(1093 -(630 + 436))) or ((5701 -((1740 -(514 + 1017)) + 792))==4561)) then if (((1715 + 770)<(4322 -1795)) and (v91<=22)) then if (((5201 -(232 + 111 + 162))>=(84 + 379 + 3886)) and (v91<=(58 -38))) then if ((v91==(2 + 5 + 12)) or (((13850 -10121) -(45 + 907))<=(417 + 1260))) then local v128=0;local v129;local v130;local v131;local v132;while true do if (((355 + 905)==((8385 -5399) -1726)) and (v128==(1234 -(201 + 1032)))) then v131=nil;v132=nil;v128=2;end if ((v128==(1176 -(882 + (653 -359)))) or ((1437 -(1017 + 163))>=(6319 -3994))) then v129=0 + 0;v130=nil;v128=1;end if ((2==v128) or ((504 -393)>=(5494 -((1550 -(94 + 1154)) + 1409)))) then while true do if ((v129==(0 + 0)) or ((171 + 1730)>=(3203 + 1426))) then v130=(0 + 0) -0;v131=nil;v129=2 -1;end if ((2908<=(5687 -(738 + 772))) and ((248 -((650 -507) + 104))==v129)) then v132=nil;while true do if ((((2350 -(1433 + 426)) + 813)==1304) and (v130==(0 + 0))) then local v245=0 + 0;while true do if ((v245==(1 + 0)) or ((1041 + 764)>(4531 + 336))) then v130=1;break;end if ((v245==((2237 -(879 + 4)) -(738 + (684 -(20 + 48))))) or ((8435 -(1569 + 1891))<=(3631 + (1471 -(246 + 577))))) then v131=v90[5 -3];v132={};v245=1 -0;end end end if ((v130==(2 -(1 -0))) or ((5192 -(25 + 1321))<(858 + 489))) then for v256=(7 -5) -1, #v87 do local v257=0 + (0 -0);local v258;local v259;while true do if ((v257==(0 -0)) or (703==(254 + 4726))) then v258=0 -0;v259=nil;v257=1 + 0;end if (((264 + (962 -655))<=(12794 -8172)) and (v257==(1 + 0))) then while true do if ((v258==(34 -((203 -(10 + 176)) + (1581 -(1394 + 170))))) or ((310 + 968)>=(2411 + 338))) then v259=v87[v256];for v287=0 -0, #v259 do local v288=0 + 0;local v289;local v290;local v291;local v292;while true do if ((((2191 -(31 + 19)) -(5 + 899))>(471 + (995 -(159 + 579)))) and (v288==(1091 -(588 + 501)))) then while true do if (((4932 -(45 + 307))<=(5721 -((1450 -(621 + 619)) + 649))) and (v289==(0 -(672 -(533 + 139))))) then v290=v259[v287];v291=v290[1];v289=1;end if ((1222==(3002 -(565 + 1215))) and (v289==(1 + 0))) then v292=v290[2];if (((v291==v88) and (v292>=v131)) or ((5947 -((6142 -4740) + 383))<=2467)) then local v307=558 -(139 + 419);while true do if (((1075 + 1167)>=(4321 -2160)) and (v307==0)) then v132[v292]=v291[v292];v290[1095 -(743 + 351)]=v132;break;end end end break;end end break;end if ((514==(109 + (1258 -(21 + 832)))) and (v288==((0 + 0) -0))) then v289=92 -(19 + 73);v290=nil;v288=686 -(549 + 136);end if ((v288==((5 -3) -1)) or ((11415 -7610)<1145)) then v291=nil;v292=nil;v288=2;end end end break;end end break;end end end break;end end break;end end break;end end else local v133=0;local v134;local v135;local v136;local v137;local v138;while true do if ((v133==(3 -1)) or ((3192 -(462 + 710))==(12734 -7982))) then v138=nil;while true do if (((3508 -(331 + 314))>=2042) and (((0 + 0) -0)==v134)) then local v217=0 + 0;while true do if ((v217==((1028 -(218 + 808)) -1)) or ((1090 -((1459 -(785 + 200)) + 395))>(388 + 139 + (3699 -2690)))) then v134=1936 -(275 + 1660);break;end if ((0==v217) or ((2578 -(235 + 201))>2595)) then v135=v90[2];v136,v137=v85(v88[v135](v12(v88,v135 + (1665 -(915 + 749)),v90[6 -(1471 -(1308 + 160))])));v217=(1 -0) + 0;end end end if ((v134==2) or ((5430 -(90 + 697))<(731 + 78 + 140))) then for v225=v135,v66 do local v226=614 -((1031 -(395 + 376)) + 354);local v227;while true do if ((0==v226) or ((1175 + 889)==(5655 -(686 + 359)))) then v227=0;while true do if (((127 -(89 + (1594 -(799 + 757))))==v227) or ((605 -(171 + 173))>(1183 + 51))) then v138=v138 + (252 -(149 + 102));v88[v225]=v136[v138];break;end end break;end end end break;end if (((1800 -(1170 + 628 + 1))==v134) or (((3573 + 1305) -3483)==(943 -(25 + 129)))) then v66=(v137 + v135) -(1 -(0 + 0));v138=0 -0;v134=1 + 1;end end break;end if (((7232 -5268)<(993 + 1330)) and (v133==1)) then v136=nil;v137=nil;v133=1766 -(1712 + 52);end if (((3466 + 735)==((4508 -(1373 + 562)) + 1628)) and ((0 + 0)==v133)) then v134=1892 -(369 + 1523);v135=nil;v133=3 -2;end end end elseif ((v91>(33 -12)) or ((988 -(166 + 761))>=(2754 -1249))) then local v139=0 -0;local v140;local v141;local v142;local v143;while true do if ((v139==(6 -4)) or (1690<(1414 -465))) then while true do if ((v140==(0 + 0)) or ((5059 -(64 + 1651))==(3 + 125))) then v141=800 -(583 + 217);v142=nil;v140=1 + 0;end if ((v140==((1387 -(44 + 1341)) -(1 -0))) or ((1972 -(31 + 218))<((1879 -(985 + 8)) + 474))) then v143=nil;while true do if ((v141==(1366 -(653 + 158 + 554))) or ((3741 -2644)>=(5912 -(1169 + 396)))) then for v260=v142 + (338 -(239 + 98)),v90[2 + 2] do v143=v143   .. v88[v260];end v88[v90[148 -(65 + 81)]]=v143;break;end if ((v141==0) or ((3560 -(1001 + 189))<1483)) then local v247=161 -(97 + 64);while true do if ((v247==(0 -0)) or (((5763 -(115 + 975)) -(1005 + 594))==(541 + 18))) then v142=v90[2 + 1];v143=v88[v142];v247=1;end if (((468 + 1920)<=4812) and (v247==1)) then v141=1;break;end end end end break;end end break;end if ((v139==(0 -0)) or ((473 + 757)>=(5030 -(1104 + 342)))) then v140=0 -0;v141=nil;v139=1;end if (((3 -2)==v139) or (4230<=(1839 -(667 + 273)))) then v142=nil;v143=nil;v139=2 + 0;end end else v88[v90[1737 -(417 + 1318)]]=v29(v83[v90[(504 + 486) -((1623 -879) + 243)]],nil,v33);end elseif (((1068 + 151)<(3176 -(36 + 63))) and (v91<=(1295 -(823 + 448)))) then if ((1165<=4255) and (v91==((86 + 219) -(147 + 135)))) then local v145=0;local v146;local v147;while true do if (((0 -0)==v145) or ((402 + 628)>=(1320 + 1811))) then v146=0 + 0;v147=nil;v145=1 + 0;end if (((4 -3)==v145) or ((4868 -1144)>=3795)) then while true do if (((240 + 448)==688) and (v146==0)) then v147=v90[2];do return v12(v88,v147,v147 + v90[2 + 1]);end break;end end break;end end else local v148=1209 -(506 + 703);local v149;local v150;local v151;local v152;while true do if ((v148==(1 + 0)) or (1339>=(4604 -(33 + 337)))) then v151=nil;v152=nil;v148=3 -1;end if ((3706>(3420 + 50)) and (v148==(0 + (0 -0)))) then v149=0;v150=nil;v148=1 + 0;end if (((3922 -(35 + 204 + (1382 -(367 + 658))))>(124 + 332)) and ((6 -4)==v148)) then while true do if ((1625>1373) and ((1 + 0)==v149)) then v152=895 -(127 + 768);for v228=v150,v90[3 + 1] do local v229=0 + 0;local v230;while true do if ((v229==((790 -(420 + 370)) -0)) or ((727 + 657)==(19083 -15116))) then v230=0;while true do if (((3641 -(1114 + 605))>=1821) and (v230==(0 + 0))) then v152=v152 + 1;v88[v228]=v151[v152];break;end end break;end end end break;end if ((((2046 + 489) -1563)<(11730 -8205)) and (v149==(0 -(0 -0)))) then v150=v90[2];v151={v88[v150](v12(v88,v150 + (4 -3) + 0,v66))};v149=1 + 0;end end break;end end end elseif ((v91<=(16 + 9)) or (2180>(5998 -(538 + 797)))) then local v153=0 + 0;local v154;local v155;while true do if (((105 + 822)<=(2967 -(871 + 1047))) and (v153==(0 + 0))) then local v202=537 -(48 + 489);while true do if ((4134>=(2793 -((1545 -(25 + 1478)) + 237))) and (v202==0)) then v154=0 + 0;v155=nil;v202=1 + 0 + 0;end if ((v202==(1 + 0)) or ((4119 -(460 + 458))<=1167)) then v153=1 -0;break;end end end if (((1271 -(285 + 235))==(216 + 535)) and (v153==(4 -3))) then while true do if ((v154==(0 -0)) or (3068<=((1175 -(127 + 1039)) + 57))) then v155=v90[2];v88[v155]=v88[v155](v12(v88,v155 + ((6520 -4746) -(592 + 1181)),v66));break;end end break;end end elseif ((2715>=(2591 -(438 + 425 + 106))) and (v91>(584 -(359 + 199)))) then do return;end elseif ((214<=(5907 -3816)) and v88[v90[1732 -(661 + 1069)]]) then v65=v65 + 1;else v65=v90[8 -5];end elseif ((v91<=(9 + 23)) or ((2079 + 1631)<(3813 -(607 + 520)))) then if (((432 + (342 -(144 + 83)))<=(4825 -(176 + 1764))) and (v91<=(51 -22))) then if (((3537 -(77 + 796))==(363 + 2301)) and (v91==(2 + 26))) then local v156=0;local v157;local v158;while true do if ((v156==1) or ((579 + 502)>=(5220 -(87 + 213)))) then for v204=v157 + 1,v90[1 + 2] do v7(v158,v88[v204]);end break;end if ((v156==0) or (3258<=(484 + 1998))) then v157=v90[2];v158=v88[v157];v156=1 + 0;end end else local v159=1178 -(382 + 796);local v160;local v161;while true do if ((((4913 -(159 + 588)) -2394)>=(2925 -(732 + 457))) and (v159==(1 -0))) then while true do if ((v160==(0 -0)) or ((3192 -2319)>=(3602 -(347 + 1466)))) then v161=v90[2 + 0];v88[v161](v88[v161 + 1 + 0]);break;end end break;end if ((v159==(0 + 0)) or ((5770 -(918 + 696))==(5261 -(583 + 914)))) then v160=0 + 0;v161=nil;v159=1409 -(1124 + 284);end end end elseif ((4849>3679) and (v91<=(87 -57))) then local v162=69 -(21 + 35 + 13);local v163;while true do if ((v162==(0 + 0)) or ((245 + 123)>=(4546 -(274 + 270)))) then v163=v90[1774 -(1536 + 236)];v88[v163]=v88[v163](v88[v163 + 1]);break;end end elseif ((v91>(5 + 26)) or ((4814 -(1007 + 31))<2643)) then local v190=0;local v191;local v192;local v193;while true do if (((3 -2)==v190) or ((9017 -6824)<(854 -(210 + 203)))) then v193=nil;while true do if (((7050 -3752)==3298) and (v191==(999 -(601 + 398)))) then local v236=0 + 0;while true do if (((1858 -(780 + 1078))==v236) or ((8034 -6374)==(2792 -872))) then v192=0 -0;v193=nil;v236=1;end if (((5050 -2433)<(5420 -(256 + 200))) and (v236==(2 -1))) then v191=709 -(239 + 469);break;end end end if (((3670 -(129 + 197))>=(27 + 480)) and (v191==(1 + 0))) then while true do if (((4083 -(485 + 135))>=(3298 -1700)) and (v192==((1641 -(1399 + 242)) + 0))) then v193=v90[1 + 1];do return v88[v193](v12(v88,v193 + (2 -1),v90[1166 -((1745 -(1298 + 205)) + 921)]));end break;end end break;end end break;end if ((v190==0) or ((5473 -(790 + 722))<=(5210 -2451))) then v191=0;v192=nil;v190=1;end end else v88[v90[4 -2]]=v88[v90[3]][v88[v90[4 + 0]]];end elseif ((((22163 -16451) -(811 + 475))<4796) and (v91<=(98 -(53 + 11)))) then if (((7556 -4490)<=4649) and (v91>33)) then local v164=0 + 0;local v165;local v166;while true do if ((v164==(2 -1)) or (((11103 -7220) -(833 + 513))>4651)) then while true do if (((4308 -(1273 + 546))>=(2203 -(667 + 141))) and (v165==0)) then v166=v90[6 -(2 + 2)];v88[v166]=v88[v166]();break;end end break;end if (((4850 -(270 + 371))>=(1099 + 1918)) and (v164==0)) then v165=0 + 0;v166=nil;v164=1629 -((2074 -(754 + 469)) + 777);end end else v88[v90[(4 -2) + 0 + 0]][v90[3]]=v88[v90[1549 -(382 + (2245 -(847 + 235)))]];end elseif (((4206 -1706)>=(368 + (1553 -959))) and (v91<=(120 -(264 -179)))) then v65=v90[2 + 1];elseif (((9619 -6790)<=(1348 + 1786)) and (v91==(30 + 6))) then v88[v90[282 -(27 + 253)]]={};else local v196=0 -0;local v197;local v198;while true do if ((v196==(0 + 0 + 0)) or (2706==(2459 -(715 + 167)))) then v197=v90[2 + 0 + 0];v198=v88[v90[1449 -(653 + 793)]];v196=1;end if ((v196==(1 + 0 + 0)) or (1868==(8691 -4769))) then v88[v197 + 1]=v198;v88[v197]=v198[v90[2 + 2]];break;end end end v65=v65 + 1 + 0;break;end end end end A,B=v27(v10(v69));if  not A[1] then local v92=0;local v93;while true do if (v92==0) then v93=v31[4][v65] or "?";error("Script error at ["   .. v93   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end return v29(v28(),{},v16)();end if (3==v17) then v23=nil;function v23()local v49=0 -0;local v50;local v51;local v52;local v53;while true do if (v49==((408 -(145 + 262)) + 0)) then return (v53 * (1736883 + 15040333)) + (v52 * (21823 + 43713)) + (v51 * (70 + 186)) + v50;end if (v49==(0 + (1962 -(1404 + 558)))) then v50,v51,v52,v53=v1(v15,v18,v18 + 3);v18=v18 + (1739 -(1210 + 525));v49=1615 -(409 + 1205);end end end v24=nil;v17=4;end if (v17==1) then v20=nil;function v20(v34,v35,v36)if v36 then local v70=(v34/(((866 -(442 + 85)) -(310 + 27))^(v35-(2 -1))))%((477 -(56 + 419))^(((v36-(816 -(702 + 113))) -(v35-1)) + (921 -((1066 -630) + (1252 -768)))));return v70-(v70%(2 -1));else local v71=2^(v35-1);return (((v34%(v71 + v71))>=v71) and (3 -2)) or (1606 -(368 + 1238));end end v21=nil;v17=2;end if (v17==2) then function v21()local v54=v1(v15,v18,v18);v18=v18 + 1;return v54;end v22=nil;function v22()local v55,v56=v1(v15,v18,v18 + (4 -2));v18=v18 + (8 -6);return (v56 * (933 -677)) + v55;end v17=3;end if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==4) then function v24()local v57=0 + 0;local v58;local v59;while true do if (v57==(1 + 0)) then return (( -(2 + 0) * v20(v59,32)) + (1677 -(907 + 769))) * (2^(v20(v59,56 -(118 -83),68 -37) -(219 + 804))) * ((((v20(v59,2 -(1 + 0),19 + 1) * (((1 + 5) -4)^(1383 -(1025 + (822 -496))))) + v58)/((4 -2)^((20 + 163) -131))) + (2 -1));end if (v57==(1918 -(529 + 25 + 1364))) then v58=v23();v59=v23();v57=1941 -((1367 -583) + 1156);end end end v25=nil;function v25(v37)local v60;if  not v37 then local v72=0;while true do if (v72==(0 + 0)) then v37=v23();if (v37==(833 -(688 + 145))) then return "";end break;end end end v60=v3(v15,v18,(v18 + v37) -((3 -2) + (480 -(389 + 91))));v18=v18 + v37;local v61={};for v62=2 -1, #v60 do v61[v62]=v2(v1(v3(v60,v62,v62)));end return v6(v61);end v17=5;end end end vv8());end
